{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/HomePage/Homepage.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["getClass","isActive","cn","Navbar","className","role","to","App","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","useParams","personExist","parentName","find","p","map","born","died","motherName","fatherName","PeoplePage","useState","peopleFromServer","setPeopleFromServer","isLoading","setIsLoading","error","setError","loadPeople","fetch","response","ok","Error","status","json","peopleData","length","useEffect","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"oQAGMA,EAAW,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAClB,OAAOC,IAAG,cAAe,CAAE,8BAA+BD,GAC3D,EAEYE,EAAS,WACpB,OACE,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAWJ,EACXM,GAAG,IAFL,kBAOA,cAAC,IAAD,CACEF,UAAWJ,EACXM,GAAG,UAFL,0BAUT,EC7BYC,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMH,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UANW,E,4BCHNI,G,MAAS,kBACpB,qBAAKJ,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,GCOTK,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,cAAC,IAAD,CACEJ,GAAE,iBAAKI,QAAL,IAAKA,OAAL,EAAKA,EAAQC,MACfP,UAAWF,IAAG,CACZ,kBAAmC,OAAV,OAANQ,QAAM,IAANA,OAAA,EAAAA,EAAQE,OAH/B,gBAMGF,QANH,IAMGA,OANH,EAMGA,EAAQG,MAGd,ECVYC,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrCJ,EAASK,cAATL,KAEFM,EAAc,SAACC,GACnB,OAAOH,EAAOI,MAAK,SAAAC,GAAC,OAAIA,EAAEP,OAASK,CAAf,GACrB,EAED,OACE,wBACE,UAAQ,cACRd,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGW,EAAOM,KAAI,SAAAX,GAAM,OAChB,qBACE,UAAQ,SAERN,UAAWF,IAAG,CACZ,yBAA0BQ,EAAOC,OAASA,IAJ9C,UAOE,6BACE,cAAC,EAAD,CACED,OAAQA,MAIZ,6BACGA,EAAOE,MAEV,6BACGF,EAAOY,OAEV,6BACGZ,EAAOa,OAEV,6BAEGN,EAAYP,EAAOc,YAClB,cAAC,EAAD,CACEd,OAAQO,EAAYP,EAAOc,cAG7B,4BAAId,EAAOc,YAAc,QAG7B,6BACGP,EAAYP,EAAOe,YAClB,cAAC,EAAD,CACEf,OAAQO,EAAYP,EAAOe,cAG7B,4BAAIf,EAAOe,YAAc,UApCxBf,EAAOC,KAHE,QA+CzB,EC5EYe,EAAa,WACxB,MAAgDC,mBAAmB,IAAnE,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAIMC,EAAU,iDAAG,yHAEQC,MAJf,qEAEO,WAETC,EAFS,QAIDC,GAJC,sBAKP,IAAIC,MAAJ,8BAAiCF,EAASG,SALnC,uBAQUH,EAASI,OARnB,UAUW,KAFpBC,EARS,QAUAC,OAVA,wBAWbT,EAAS,qCAXI,2BAgBfJ,EAAoBY,GAhBL,kDAkBfR,EAAS,wBAlBM,yBAoBfF,GAAa,GApBE,6EAAH,qDA4BhB,OAJAY,qBAAU,WACRT,GACD,GAAE,IAGD,qCACE,oBAAI9B,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACG0B,GAAa,cAAC,EAAD,IAEbE,GACC,mBAAG,UAAQ,qBAAqB5B,UAAU,kBAA1C,SACG4B,IAGJA,GAAqC,IAA5BJ,EAAiBc,QACzB,mBAAG,UAAQ,kBAAX,SACGV,KAGHA,IAAUF,GACV,cAAC,EAAD,CACEf,OAAQa,WAQrB,ECnEYgB,EAAW,kBACtB,oBAAIxC,UAAU,QAAd,sBADsB,ECAXyC,EAAe,kBAC1B,oBAAIzC,UAAU,QAAd,2BAD0B,ECgB5B0C,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,eAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,IAA9B,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,SAE/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAU7C,GAAG,IAAI+C,SAAO,a","file":"static/js/main.75fa6b9c.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst getClass = ({ isActive }: { isActive: boolean }) => {\n  return cn('navbar-item', { 'has-background-grey-lighter': isActive });\n};\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import './Loader.scss';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person?: Person | null;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <NavLink\n      to={`${person?.slug}`}\n      className={cn({\n        'has-text-danger': person?.sex === 'f',\n      })}\n    >\n      {person?.name}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[] | [],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  const personExist = (parentName: string | null) => {\n    return people.find(p => p.name === parentName);\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={cn({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <PersonLink\n                person={person}\n              />\n            </td>\n\n            <td>\n              {person.sex}\n            </td>\n            <td>\n              {person.born}\n            </td>\n            <td>\n              {person.died}\n            </td>\n            <td>\n\n              {personExist(person.motherName) ? (\n                <PersonLink\n                  person={personExist(person.motherName)}\n                />\n              ) : (\n                <p>{person.motherName || '-'}</p>\n              )}\n            </td>\n            <td>\n              {personExist(person.fatherName) ? (\n                <PersonLink\n                  person={personExist(person.fatherName)}\n                />\n              ) : (\n                <p>{person.fatherName || '-'}</p>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  // eslint-disable-next-line\n  const URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\n  const loadPeople = async () => {\n    try {\n      const response = await fetch(URL);\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const peopleData = await response.json();\n\n      if (peopleData.length === 0) {\n        setError('There are no people on the server');\n\n        return;\n      }\n\n      setPeopleFromServer(peopleData);\n    } catch {\n      setError('Something went wrong');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {error}\n            </p>\n          )}\n          {error && peopleFromServer.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              {error}\n            </p>\n          )}\n          {!error && !isLoading && (\n            <PeopleTable\n              people={peopleFromServer}\n            />\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}